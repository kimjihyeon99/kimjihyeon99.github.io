---
layout: post
title: "[DB] 1-2장 기출문제"
date: "2021-05-02 12:00:00 +0200" 
image: 12.jpg
tags: [db, 1-2장, daatmodeling]
categories: DB
---

### ✏ 31번

<img src = https://user-images.githubusercontent.com/44187194/118509208-d00f1d80-b76a-11eb-8287-391e91704fa0.png width=700 height=350>

#### 답: 1번

#### 해설 

성능데이터 모델링

- 데이터 증가가 빠를수록 성능저하에 따른 성능개선비용 증가함
- 데이터모델은 성능을 튜닝하면서 변경이 될 수 있는 특징이 있다.
- 분석/설계 단계에서 성능을 고려한 데이터 모델링을 수행할 경우 성능저하에 따른 Rework비용을 최소화 할 수 있는 기회를 가진다.


### ✏ 32번

<img src = https://user-images.githubusercontent.com/44187194/118511319-c090d400-b76c-11eb-9da9-f26e695b0762.png width=700 height=350>


#### 답: 반정규화 

#### 해설 

1. 데이터 모델링을 할 때 **정규화**를 정확하게 수행한다.
2. 데이터 베이스 **용량산정**을 수행한다.
3. 데이터 베이스에 발생되는 **트랜잭션의 유형**을 파악한다.
4. 용량과 트랜잭션의 유형에 따라 **반정규화**를 수행한다.
5. 이력모델의 조정, PK/FK조정, 슈퍼타입/서브타입 조정 등을 수행한다. 


### ✏ 33번

<img src =https://user-images.githubusercontent.com/44187194/118511695-1feee400-b76d-11eb-844c-908bd17b634b.png width=700 height=350>


#### 답: 4번

#### 해설

32번 해설과 동일함


### ✏ 34번

<img src = https://user-images.githubusercontent.com/44187194/118512365-b28f8300-b76d-11eb-8174-9f4a65595945.png width=700 height=350>


#### 답: 1번

#### 해설

-성능데이터 모델링 시 고려사항 

정규화가 항상 조회 성능을 저하시킨다는 것은 잘못된 생각

중복된 데이터를 제거함으로써 조회성능을 향상 시킬 수 있다.


### ✏ 35번

<img src = https://user-images.githubusercontent.com/44187194/118515004-ea97c580-b76f-11eb-9a9e-3dcf4fdd8d63.png width=700 height=350>


#### 답: 3번

#### 해설

함수 종속성을 규칙에따라 {관서번호}->{관리점번호, 관서명, 상태, 관서등록일자} 인 관서 번호가 PK 인 엔터티가 2차 정규화로 분리되야함


### ✏ 36번

<img src = https://user-images.githubusercontent.com/44187194/118816931-a7636100-b8ed-11eb-9131-9d8c3d7b2652.png  width=700 height=350>


#### 답: 3번

#### 해설

1. 매각 기일은 일자멸로 매각이 시행되는 시간과 장소를 의미, 일자별매각물건 엔터티의 매각시간, 매각장소 속성은 두 개의 주식별자 중 매각 일자에만 종속되기 때문에 2차 정규화의 대상이 됨

2. 매각기일 엔터티는 일자별 매각 물건의 주식별자 중 일부로서 독립했기 때문에 매각기일과 일자별 매각물건은 1:M으로 연결된다. 

<img src = https://user-images.githubusercontent.com/44187194/118829789-62452c00-b8f9-11eb-98b0-0ce08069427e.png width=700 height=350>

### ✏ 37번

<img src = https://user-images.githubusercontent.com/44187194/118829911-843eae80-b8f9-11eb-8cc1-261e19c52804.png  width=350 height=700>


#### 답: 4번

#### 해설

컬럼에 대한 **반복적인 속성값을 갖는 형태**는 원자성을 위배한 1차 정규화의 대상이된다. 

유형기능분류코드 각각에 대해 개별 index를 생성할 경우 너무 많은 컬럼으로 성능저하될 수 있다.


### ✏ 38번

<img src = https://user-images.githubusercontent.com/44187194/118853575-dc33e000-b90e-11eb-86b8-85fa5cddf56f.png width=350 height=700>


#### 답: 1번

#### 해설

컬럼 단위에서 중복된 경우도 1차 정규화의 대상이된다. 

이에대한 분리는 1:M의 관계로 두 개의 엔터티로 분리된다.


### ✏ 39번

<img src = https://user-images.githubusercontent.com/44187194/118853747-11403280-b90f-11eb-8c43-b12df735d4d3.png width=700 height=350>


#### 답: 1번

#### 해설

PK에 대해 반복이 되는 그룹이 존재하지 않으므로 1차 정규형이라 할 수 있다.

부분 함수 종속의 규칙을 가지고 있으므로 2차 정규형이라고 할 수 없고, 대상이되는 엔터티이다. 


### ✏ 40번

<img src = https://user-images.githubusercontent.com/44187194/118853947-49e00c00-b90f-11eb-9b1c-f8d7e21dd85e.png width=700 height=350>


#### 답: 1번

#### 해설

반정규화를 고려할 때 판단요소
- 다량 데이터 탐색의 경우 인덱스가 아닌 파티션 및 데이터 클러스터링 등의 다양한 물리 저장 기법을 활용 해 성능 개선을 유도할 수 있다.
- 이전 또는 이후 위치의 레코드에 대한 탐색은 window function으로 접근 가능하다.
- 집계 테이블 이외에도 다양한 유형에 대하여 반정규화 테이블 적용이 필요할 수 있다.

### ✏ 41번 (비추)

<img src = https://user-images.githubusercontent.com/44187194/118900235-67cb6200-b94b-11eb-9da1-48bf26328e00.png  width=700 height=350>


#### 답: 4번

#### 해설

반정규화 기법은 테이블, 속성, 관계에 대해서 반정규화를 적용할 수 있으며, 하나의 테이블의 

전체 칼럼 중 자주 이용하는 집중화된 칼럼들이 있을 때 디스크 I/O를 줄이기 위해 해당 칼럼들을 

별도로 모아 놓는 반 정규화 기법은 테이블추가 반정규화 기법 중에서 부분테이블 추가에 해당

### ✏ 42번

<img src = https://user-images.githubusercontent.com/44187194/118908138-c4cf1400-b95b-11eb-8411-6d56010e1267.png  width=700 height=350>

#### 답: 3번

#### 해설

칼럼에 대한 반정규화 기법

- 중복칼럼 추가 : 조인 감소를 위해 여러 테이블에 동일한 칼럼을 갖도록함
- 파생칼럼 추가 : 조회 성능을 우수하게 하기 위해 미리 계산된 칼럼을 갖도록함
- 이력테이블에 기능 칼럼을 추가함 : 최신값을 처리하는 이력의 특성을 고려하여 기능성 칼럼 추가함


### ✏ 43번

<img src = https://user-images.githubusercontent.com/44187194/118908673-c9e09300-b95c-11eb-92ba-389415921f59.png width=700 height=350>


#### 답: 3번

#### 해설

제품 엔터티에 단가를 주문번호별로 합하는 것은 해당 제품이 여러주문에 포함될 수 있기 때문에 특정 주문번호만의 단가 합계금액을 갖고 있을 수 없고, 주문 엔터티에 주문번호별 단가 합계 금액을 추가하게 
